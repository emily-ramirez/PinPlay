{"version":3,"sources":["components/ShowPlaylists.js","components/EndScreen.js","apis/django.js","components/Filters.js","actions/index.js","history.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/playlistReducer.js","reducers/index.js","index.js"],"names":["ShowPlaylists","type","to","className","EndScreen","console","log","this","props","playlistID","class","React","Component","connect","state","ownProps","match","params","id","axios","create","baseURL","PlaylistFilters","token","Cookies","get","user_id","userID","makePlaylist","src","getPlaylistLink","allowtransparency","allow","title","onClick","bind","playlist","auth","dispatch","a","django","auth_token","playlist_name","response","payload","data","createBrowserHistory","Header","getID","style","float","Provider","value","user","storeLogin","display_name","redirectUri","clientID","scopes","App","history","path","exact","component","Filters","INITIAL_STATE","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0f3d0a3b.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\nconst ShowPlaylists = () => {\n  return(\n    <div>\n      Playlists will be displayed here in the future.\n      For now, click the button to your right to go to the playlist generation page.\n      <button type=\"button\">\n        <Link to={`/filters`} className=\"ui button primary\">\n          Click here!\n        </Link>\n      </button>\n    </div>\n  )\n}\n\nexport default ShowPlaylists","import React from 'react';\nimport {connect} from 'react-redux';\n//THIS IS A MESSS\n//CURRENTLY UNUSED\nclass EndScreen extends React.Component{\n\n  render() {\n    console.log(this.props.playlistID)\n    const playlistLink = `https://open.spotify.com/embed/playlist/${this.props.playlistID}`\n    return(\n      <div>\n\n        <div class=\"playlist_embedd\">\n        \n        </div>\n\n        \n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return{playlistID:ownProps.match.params.id};\n};\n\nexport default connect(mapStateToProps, null)(EndScreen);\n\n/*\n<div class=\"site_button\">\n        <button type=\"button\">\n            <Link to={`/`} className=\"ui button primary\">\n              Update Playlist\n            </Link>\n        </button>\n*/","import axios from 'axios';\n\n//TODO: Change the url for deployment\nexport default axios.create({\n    baseURL: 'http://pinplay.me'\n});\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport Cookies from 'js-cookie'\nimport {makePlaylist} from '../actions'\nimport 'react-spotify-auth/dist/index.css'\n\nclass PlaylistFilters extends React.Component{\n\n  onClick() {\n    const token = Cookies.get('spotifyAuthToken');\n    const user_id = this.props.userID;\n    this.props.makePlaylist(user_id, token)\n  }\n\n  getPlaylistLink() {\n    return `https://open.spotify.com/embed/playlist/${this.props.playlistID}`\n  }\n  render(){\n  const token = Cookies.get('spotifyAuthToken');\n  return(\n    <div>\n      {token ? (\n      <div>\n        {this.props.playlistID ? (\n        <div>\n          <div>\n            Your generated playlist:\n          </div>\n          <iframe class=\"embedded-playlist\" src={this.getPlaylistLink()}\n                allowtransparency=\"true\" allow=\"encrypted-media\" title={this.props.playlistID}>\n        </iframe>\n        </div>\n      ) : (\n        <div>\n          <button onClick={this.onClick.bind(this)} class=\"ui button primary\">\n            Generate A Playlist!\n          </button>\n        </div>\n      )}\n      </div>\n      ) : (\n      <div>\n        Please log in to continue.\n        NOTE: You may need to reload the page when you log in.\n      </div>\n      )}\n      \n    </div>\n  )}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return{playlistID:state.playlist.playlistID, userID:state.auth.userID};\n};\n\nexport default connect(mapStateToProps, {makePlaylist})(PlaylistFilters);","import django from '../apis/django';\n\nexport const makePlaylist = (id, token) => async dispatch => {\n  const response = await django.get('/pinplay_api/', {params:{\n    user_id: id,\n    auth_token: token,\n    playlist_name: \"My First Pinplay Playlist\"\n  }});\n\n  dispatch({type:'MAKE_PLAYLIST', payload:response.data});\n};\n\nexport const getID = (id) => {\n  return ({\n    type: 'GET_ID',\n    payload:id\n});\n};","import { createBrowserHistory } from 'history'; \nexport default createBrowserHistory();","import React from 'react';\nimport {connect} from 'react-redux';\nimport { SpotifyApiContext, User} from 'react-spotify-api'\nimport Cookies from 'js-cookie'\nimport {getID} from '../actions'\n\nimport { SpotifyAuth } from 'react-spotify-auth'\nimport 'react-spotify-auth/dist/index.css'\n\nclass Header extends React.Component {\n\n  storeLogin(id){\n    this.props.getID(id)\n  }\n  render() {\n  const token = Cookies.get('spotifyAuthToken')\n  return (\n    <div>\n      <div className=\"background_header\">\n      <h1>PinPlay</h1>\n      <div style={{float:'right'}}>\n      {token ? (\n        <SpotifyApiContext.Provider value={token}>\n          <User>\n            {(user) =>\n                  user && user.data ? (\n                    <p>\n                      <div>\n                      {this.storeLogin(user.data.id)}\n                      Logged in as {user.data.display_name}\n                      </div>\n                    </p>\n                  ) : (\n                    <p>Loading...</p>\n                  )\n            }\n          </User>\n\n        </SpotifyApiContext.Provider>\n      ) : (\n        // TODO: Replace 'localhost:3000' with 'pinplay.me'\n        <SpotifyAuth\n          redirectUri='http://pinplay.me/'\n          clientID='b698366808af491eb20ed64dedd91914'\n          scopes={['user-read-private', 'user-read-email', 'playlist-modify-public', 'playlist-modify-private']}\n        />\n      )}\n    </div>\n    </div>\n    <div className=\"header_color\"></div>\n    <div className=\"header_color2\"></div>\n    </div>\n  )\n      }\n}\n\nexport default connect(null,{getID})(Header);","import React from 'react'\nimport {Router, Route} from 'react-router-dom';\nimport ShowPlaylists from './ShowPlaylists';\nimport EndScreen from './EndScreen';\nimport Filters from './Filters';\nimport history from '../history';\n\n\nimport Header from './Header';\n\n//TODO: convert App into header\n//TODO: make header always showing via react-router\nconst App = () => {\n  return (\n    <div>\n      <Router history={history}>\n        <Header/>\n      \n          <div>\n            <Route path=\"/\" exact component={ShowPlaylists} />\n            \n            <Route path=\"/filters\" exact component={Filters} />\n          </div>\n      </Router>\n      \n    </div>\n    \n    \n    /*\n    <p>You are authorized with token: {token}</p>\n    <div>\n    Email is {user.data.email}\n    </div>\n    <div>\n    URI is {user.data.uri}\n    </div>\n    <div>\n    URL is {user.data.external_urls.spotify}\n    </div>\n    <img src={user.data.images[0].url}></img>\n    \n    <Route path=\"/endscreen/:id\" exact component={EndScreen} />\n    */\n  )\n};\n\nexport default App;","const INITIAL_STATE = {\n  userID: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n      case 'GET_ID':\n        return {...state, userID: action.payload};\n      default:\n          return state;\n  }\n}","const INITIAL_STATE = {\n  playlistID: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n      case 'MAKE_PLAYLIST':\n        return {...state, playlistID: action.payload};\n      default:\n          return state;\n  }\n}","import {combineReducers} from 'redux';\nimport authReducer from './authReducer';\nimport playlistReducer from './playlistReducer';\n\nexport default combineReducers({\n  playlist: playlistReducer,\n  auth: authReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\nimport App from './components/App.js';\nimport reducers from './reducers';\nimport reduxThunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers, \n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>, \n  document.querySelector('#root')\n);"],"sourceRoot":""}